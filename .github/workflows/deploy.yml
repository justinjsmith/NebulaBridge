name: Deploy to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Check for AWS credentials
        run: |
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ] || [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
            echo "::error::AWS credentials are missing. Please add AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY to your repository secrets."
            echo "To add secrets:"
            echo "1. Go to your repository settings"
            echo "2. Navigate to Secrets and variables > Actions"
            echo "3. Click 'New repository secret'"
            echo "4. Add AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY with your AWS credentials"
            exit 1
          fi
          echo "AWS credentials are properly configured."

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend tests
        run: |
          cd frontend
          CI=true npm test -- --watchAll=false

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Package Lambda function
        run: |
          cd backend
          zip -r lambda_function.zip lambda_function.py

      - name: Deploy frontend to S3
        run: |
          aws s3 sync frontend/build/ s3://nebulabridge-frontend-1744743617 --delete

      - name: Update Lambda function
        run: |
          aws lambda update-function-code \
            --function-name NebulaBridgeBackend \
            --zip-file fileb://backend/lambda_function.zip

      - name: Create API Gateway deployment
        run: |
          aws apigateway create-deployment \
            --rest-api-id zeiuj2c69c \
            --stage-name prod
